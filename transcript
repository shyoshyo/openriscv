# //  ModelSim SE-64 10.2c Jul 18 2013 Linux 4.4.0-72-generic
# //
# //  Copyright 1991-2013 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
# Loading project riscv
# Compile of flash_rom.v was successful.
# Compile of ctrl.v was successful.
# Compile of defines.v was successful.
# Compile of div.v was successful.
# Compile of ex.v was successful.
# Compile of ex_mem.v was successful.
# Compile of id.v was successful.
# Compile of id_ex.v was successful.
# Compile of if_id.v was successful.
# Compile of llbit_reg.v was successful.
# Compile of mem.v was successful.
# Compile of mem_wb.v was successful.
# Compile of openriscv.v was successful.
# Compile of pc_reg.v was successful.
# Compile of regfile.v was successful.
# Compile of wishbone_bus_if.v was successful.
# Compile of data_ram.v was successful.
# Compile of flash_rom.v was successful.
# Compile of openriscv_min_sopc.v was successful.
# Compile of openriscv_min_sopc_tb.v was successful.
# Compile of phy_bus_addr_conv.v was successful.
# Compile of async.v was successful.
# Compile of raminfr.v was successful.
# Compile of timescale.v was successful.
# Compile of uart_debug_if.v was successful.
# Compile of uart_defines.v was successful.
# Compile of uart_receiver.v was successful.
# Compile of uart_regs.v was successful.
# Compile of uart_rfifo.v was successful.
# Compile of uart_sync_flops.v was successful.
# Compile of uart_tfifo.v was successful.
# Compile of uart_top.v was successful.
# Compile of uart_transmitter.v was successful.
# Compile of uart_wb.v was successful.
# Compile of wb_conmax_arb.v was successful.
# Compile of wb_conmax_defines.v was successful.
# Compile of wb_conmax_master_if.v was successful.
# Compile of wb_conmax_msel.v was successful.
# Compile of wb_conmax_pri_dec.v was successful.
# Compile of wb_conmax_pri_enc.v was successful.
# Compile of wb_conmax_rf.v was successful.
# Compile of wb_conmax_slave_if.v was successful.
# Compile of wb_conmax_top.v was successful.
# Compile of csr.v was successful.
# Compile of config_string_and_timer.v was successful.
# Compile of mmu_conv.v was successful.
# Compile of bootloader.v was successful.
# 46 compiles, 0 failed with no errors. 
vsim -voptargs=+acc work.openriscv_min_sopc_tb
# vsim -voptargs=+acc work.openriscv_min_sopc_tb 
# ** Note: (vsim-3812) Design is being optimized...
# ** Note: (vopt-143) Recognized 1 FSM in module "uart_receiver(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "wb_conmax_arb(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "uart_transmitter(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "openriscv_min_sopc_tb(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "uart_wb(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "div(fast)".
# Loading work.openriscv_min_sopc_tb(fast)
# Loading work.openriscv_min_sopc(fast)
# Loading work.phy_bus_addr_conv(fast)
# Loading work.openriscv(fast)
# Loading work.pc_reg(fast)
# Loading work.if_id(fast)
# Loading work.id(fast)
# Loading work.regfile(fast)
# Loading work.id_ex(fast)
# Loading work.ex(fast)
# Loading work.ex_mem(fast)
# Loading work.mem(fast)
# Loading work.mem_wb(fast)
# Loading work.ctrl(fast)
# Loading work.div(fast)
# Loading work.LLbit_reg(fast)
# Loading work.csr(fast)
# Loading work.mmu_conv(fast)
# Loading work.wishbone_bus_if(fast)
# Loading work.wishbone_bus_if(fast__1)
# Loading work.data_ram(fast)
# Loading work.uart_top(fast)
# Loading work.uart_wb(fast)
# Loading work.uart_regs(fast)
# Loading work.uart_transmitter(fast)
# Loading work.uart_tfifo(fast)
# Loading work.raminfr(fast)
# Loading work.uart_sync_flops(fast)
# Loading work.uart_receiver(fast)
# Loading work.uart_rfifo(fast)
# Loading work.uart_debug_if(fast)
# Loading work.bootloader(fast)
# Loading work.flash_rom(fast)
# Loading work.config_string_and_timer(fast)
# Loading work.wb_conmax_top(fast)
# Loading work.wb_conmax_master_if(fast)
# Loading work.wb_conmax_slave_if(fast)
# Loading work.wb_conmax_arb(fast)
# Loading work.wb_conmax_msel(fast)
# Loading work.wb_conmax_pri_enc(fast)
# Loading work.wb_conmax_pri_dec(fast)
# Loading work.wb_conmax_rf(fast)
# ** Warning: (vsim-3015) /home/shyo/openriscv/src/cpu/openriscv.v(674): [PCDPC] - Port size (12 or 12) does not match connection size (32) for port 'csr_reg_addr_i'. The port definition is at: /home/shyo/openriscv/src/cpu/mem.v(65).
#         Region: /openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/mem0
do /home/shyo/openriscv/modelsim/wave.do
add wave -position 54  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[6]
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /home/shyo/openriscv/modelsim/wave.do
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /home/shyo/openriscv/modelsim/wave.do
start

restart
# Loading work.openriscv_min_sopc_tb(fast)
# Loading work.openriscv_min_sopc(fast)
# Loading work.phy_bus_addr_conv(fast)
# Loading work.openriscv(fast)
# Loading work.pc_reg(fast)
# Loading work.if_id(fast)
# Loading work.id(fast)
# Loading work.regfile(fast)
# Loading work.id_ex(fast)
# Loading work.ex(fast)
# Loading work.ex_mem(fast)
# Loading work.mem(fast)
# Loading work.mem_wb(fast)
# Loading work.ctrl(fast)
# Loading work.div(fast)
# Loading work.LLbit_reg(fast)
# Loading work.csr(fast)
# Loading work.mmu_conv(fast)
# Loading work.wishbone_bus_if(fast)
# Loading work.wishbone_bus_if(fast__1)
# Loading work.data_ram(fast)
# Loading work.uart_top(fast)
# Loading work.uart_wb(fast)
# Loading work.uart_regs(fast)
# Loading work.uart_transmitter(fast)
# Loading work.uart_tfifo(fast)
# Loading work.raminfr(fast)
# Loading work.uart_sync_flops(fast)
# Loading work.uart_receiver(fast)
# Loading work.uart_rfifo(fast)
# Loading work.uart_debug_if(fast)
# Loading work.bootloader(fast)
# Loading work.flash_rom(fast)
# Loading work.config_string_and_timer(fast)
# Loading work.wb_conmax_top(fast)
# Loading work.wb_conmax_master_if(fast)
# Loading work.wb_conmax_slave_if(fast)
# Loading work.wb_conmax_arb(fast)
# Loading work.wb_conmax_msel(fast)
# Loading work.wb_conmax_pri_enc(fast)
# Loading work.wb_conmax_pri_dec(fast)
# Loading work.wb_conmax_rf(fast)
# ** Warning: (vsim-3015) /home/shyo/openriscv/src/cpu/openriscv.v(674): [PCDPC] - Port size (12 or 12) does not match connection size (32) for port 'csr_reg_addr_i'. The port definition is at: /home/shyo/openriscv/src/cpu/mem.v(65).
#         Region: /openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/mem0
run -a
# (openriscv_min_sopc_tb.openriscv_min_sopc0.uart_top0) UART INFO: Data bus width is 32. Debug Interface present.
# 
# (openriscv_min_sopc_tb.openriscv_min_sopc0.uart_top0) UART INFO: Doesn't have baudrate output
# 
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /home/shyo/openriscv/modelsim/wave.do
run -a
add wave -position 56  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[8]
add wave -position 57  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[9]
add wave -position 58  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[18]
add wave -position 59  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[19]
add wave -position 60  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[20]
add wave -position 61  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[21]
add wave -position 62  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[22]
add wave -position 63  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[23]
add wave -position 64  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[24]
add wave -position 65  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[25]
add wave -position 66  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[26]
add wave -position 67  sim:/openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/regfile1/regs[27]
3€?µ+f§:; ;r‰Â7Q*@àQ*@àQ*@àQ*@àQ*`àQ*`àQ*`àQ*`àQ*@àQ*@àQ*@®þQ*@	ÿQ*@®þQ*@÷ÿQ*@®þQ*@"Q*@®þQ*@"Q*@¯þQ*@	ÿQ*@®þQ*@	ÿQ*@®þQ*@÷ÿQ*@®þQ*@"Q*@®þQ*@"Q*@¯þQ*@	ÿQ*@®þQ*@	ÿQ*@®þQ*@÷ÿQ*@®þQ*@"Q*@®þQ*@"Q*@¯þQ*@	ÿQ*`®þQ*`	ÿQ*`®þQ*`÷ÿQ*`®þQ*`Compile of ctrl.v was successful.
# Compile of defines.v was successful.
# Compile of div.v was successful.
# Compile of ex.v was successful.
# Compile of ex_mem.v was successful.
# Compile of id.v was successful.
# Compile of id_ex.v was successful.
# Compile of if_id.v was successful.
# Compile of llbit_reg.v was successful.
# Compile of mem.v was successful.
# Compile of mem_wb.v was successful.
# Compile of openriscv.v was successful.
# Compile of pc_reg.v was successful.
# Compile of regfile.v was successful.
# Compile of wishbone_bus_if.v was successful.
# Compile of data_ram.v was successful.
# Compile of flash_rom.v was successful.
# Compile of openriscv_min_sopc.v was successful.
# Compile of openriscv_min_sopc_tb.v was successful.
# Compile of phy_bus_addr_conv.v was successful.
# Compile of async.v was successful.
# Compile of raminfr.v was successful.
# Compile of timescale.v was successful.
# Compile of uart_debug_if.v was successful.
# Compile of uart_defines.v was successful.
# Compile of uart_receiver.v was successful.
# Compile of uart_regs.v was successful.
# Compile of uart_rfifo.v was successful.
# Compile of uart_sync_flops.v was successful.
# Compile of uart_tfifo.v was successful.
# Compile of uart_top.v was successful.
# Compile of uart_transmitter.v was successful.
# Compile of uart_wb.v was successful.
# Compile of wb_conmax_arb.v was successful.
# Compile of wb_conmax_defines.v was successful.
# Compile of wb_conmax_master_if.v was successful.
# Compile of wb_conmax_msel.v was successful.
# Compile of wb_conmax_pri_dec.v was successful.
# Compile of wb_conmax_pri_enc.v was successful.
# Compile of wb_conmax_rf.v was successful.
# Compile of wb_conmax_slave_if.v was successful.
# Compile of wb_conmax_top.v was successful.
# Compile of csr.v was successful.
# Compile of config_string_and_timer.v was successful.
# Compile of mmu_conv.v was successful.
# Compile of bootloader.v was successful.
# 46 compiles, 0 failed with no errors. 
restart
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading work.openriscv_min_sopc_tb(fast)
# Loading work.openriscv_min_sopc(fast)
# Loading work.phy_bus_addr_conv(fast)
# Loading work.openriscv(fast)
# Loading work.pc_reg(fast)
# Loading work.if_id(fast)
# Loading work.id(fast)
# Loading work.regfile(fast)
# Loading work.id_ex(fast)
# Loading work.ex(fast)
# Loading work.ex_mem(fast)
# Loading work.mem(fast)
# Loading work.mem_wb(fast)
# Loading work.ctrl(fast)
# Loading work.div(fast)
# Loading work.LLbit_reg(fast)
# Loading work.csr(fast)
# Loading work.mmu_conv(fast)
# Loading work.wishbone_bus_if(fast)
# Loading work.wishbone_bus_if(fast__1)
# Loading work.data_ram(fast)
# Loading work.uart_top(fast)
# Loading work.uart_wb(fast)
# Loading work.uart_regs(fast)
# Loading work.uart_transmitter(fast)
# Loading work.uart_tfifo(fast)
# Loading work.raminfr(fast)
# Loading work.uart_sync_flops(fast)
# Loading work.uart_receiver(fast)
# Loading work.uart_rfifo(fast)
# Loading work.uart_debug_if(fast)
# Loading work.bootloader(fast)
# Loading work.flash_rom(fast)
# Loading work.config_string_and_timer(fast)
# Loading work.wb_conmax_top(fast)
# Loading work.wb_conmax_master_if(fast)
# Loading work.wb_conmax_slave_if(fast)
# Loading work.wb_conmax_arb(fast)
# Loading work.wb_conmax_msel(fast)
# Loading work.wb_conmax_pri_enc(fast)
# Loading work.wb_conmax_pri_dec(fast)
# Loading work.wb_conmax_rf(fast)
# ** Warning: (vsim-3015) /home/shyo/openriscv/src/cpu/openriscv.v(674): [PCDPC] - Port size (12 or 12) does not match connection size (32) for port 'csr_reg_addr_i'. The port definition is at: /home/shyo/openriscv/src/cpu/mem.v(65).
#         Region: /openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/mem0


run -a
# (openriscv_min_sopc_tb.openriscv_min_sopc0.uart_top0) UART INFO: Data bus width is 32. Debug Interface present.
# 
# (openriscv_min_sopc_tb.openriscv_min_sopc0.uart_top0) UART INFO: Doesn't have baudrate output
# 
# ../bbl/bbl.c:74: machine mode: loading payload OS...
# 
# memcpy: 0%
# memcpy: 1%
# memcpy: 2%
# memcpy: 3%
# memcpy: 4%
# memcpy: 5%
# memcpy: 6%
# memcpy: 7%
# memcpy: 8%
# memcpy: 9%
# memcpy: 10%
# memcpy: 11%
# memcpy: 12%
# memcpy: 13%
# memcpy: 14%
# memcpy: 15%
# memcpy: 16%
# memcpy: 17%
# memcpy: 18%
# memcpy: 19%
# memcpy: 20%
# memcpy: 21%
# memcpy: 22%
# memcpy: 23%
# memcpy: 24%
# memcpy: 25%
# memcpy: 26%
# memcpy: 27%
# memcpy: 28%
# memcpy: 29%
# memcpy: 30%
# memcpy: 31%
# memcpy: 32%
# memcpy: 33%
# memcpy: 34%
# memcpy: 35%
# memcpy: 36%
# memcpy: 37%
# memcpy: 38%
# memcpy: 39%
# memcpy: 40%
# memcpy: 41%
# memcpy: 42%
# memcpy: 43%
# memcpy: 44%
# memcpy: 45%
# memcpy: 46%
# memcpy: 47%
# memcpy: 48%
# memcpy: 49%
# memcpy: 50%
# memcpy: 51%
# memcpy: 52%
# memcpy: 53%
# memcpy: 54%
# memcpy: 55%
# memcpy: 56%
# memcpy: 57%
# memcpy: 58%
# memcpy: 59%
# memcpy: 60%
# memcpy: 61%
# memcpy: 62%
# memcpy: 63%
# memcpy: 64%
# memcpy: 65%
# memcpy: 66%
# memcpy: 67%
# memcpy: 68%
# memcpy: 69%
# memcpy: 70%
# memcpy: 71%
# memcpy: 72%
# memcpy: 73%
# memcpy: 74%
# memcpy: 75%
# memcpy: 76%
# memcpy: 77%
# memcpy: 78%
# memcpy: 79%
# memcpy: 80%
# memcpy: 81%
# memcpy: 82%
# memcpy: 83%
# memcpy: 84%
# memcpy: 85%
# memcpy: 86%
# memcpy: 87%
# memcpy: 88%
# memcpy: 89%
# memcpy: 90%
# memcpy: 91%
# memcpy: 92%
# memcpy: 93%
# memcpy: 94%
# memcpy: 95%
# memcpy: 96%
# memcpy: 97%
# memcpy: 98%
# memcpy: 99%
# memcpy: ok!    
# 
# memset: ok!    
# 
# memcpy: 0%
# memcpy: 1%
# memcpy: 2%
# memcpy: 3%
# memcpy: 4%
# memcpy: 5%
# memcpy: 6%
# memcpy: 7%
# memcpy: 8%
# memcpy: 9%
# memcpy: 10%
# memcpy: 11%
# memcpy: 12%
# memcpy: 13%
# memcpy: 14%
# memcpy: 15%
# memcpy: 16%
# memcpy: 17%
# memcpy: 18%
# memcpy: 19%
# memcpy: 20%
# memcpy: 21%
# memcpy: 22%
# memcpy: 23%
# memcpy: 24%
# memcpy: 25%
# memcpy: 26%
# memcpy: 27%
# memcpy: 28%
# memcpy: 29%
# memcpy: 30%
# memcpy: 31%
# memcpy: 32%
# memcpy: 33%
# memcpy: 34%
# memcpy: 35%
# memcpy: 36%
# memcpy: 37%
# memcpy: 38%
# memcpy: 39%
# memcpy: 40%
# memcpy: 41%
# memcpy: 42%
# memcpy: 43%
# memcpy: 44%
# memcpy: 45%
# memcpy: 46%
# memcpy: 47%
# memcpy: 48%
# memcpy: 49%
# memcpy: 50%
# memcpy: 51%
# memcpy: 52%
# memcpy: 53%
# memcpy: 54%
# memcpy: 55%
# memcpy: 56%
# memcpy: 57%
# memcpy: 58%
# memcpy: 59%
# memcpy: 60%
# memcpy: 61%
# memcpy: 62%
# memcpy: 63%
# memcpy: 64%
# memcpy: 65%
# memcpy: 66%
# memcpy: 67%
# memcpy: 68%
# memcpy: 69%
# memcpy: 70%
# memcpy: 71%
# memcpy: 72%
# memcpy: 73%
# memcpy: 74%
# memcpy: 75%
# memcpy: 76%
# memcpy: 77%
# memcpy: 78%
# memcpy: 79%
# memcpy: 80%
# memcpy: 81%
# memcpy: 82%
# memcpy: 83%
# memcpy: 84%
# memcpy: 85%
# memcpy: 86%
# memcpy: 87%
# memcpy: 88%
# memcpy: 89%
# memcpy: 90%
# memcpy: 91%
# memcpy: 92%
# memcpy: 93%
# memcpy: 94%
# memcpy: 95%
# memcpy: 96%
# memcpy: 97%
# memcpy: 98%
# memcpy: 99%
# memset: ok!    
# 
# memcpy: 0%
# memcpy: 1%
# memcpy: 2%
# memcpy: 3%
# memcpy: 4%
# memcpy: 5%
# memcpy: 6%
# memcpy: 7%
# memcpy: 8%
# memcpy: 9%
# memcpy: 10%
# memcpy: 11%
# memcpy: 12%
# memcpy: 13%
# memcpy: 14%
# memcpy: 15%
# memcpy: 16%
# memcpy: 17%
# memcpy: 18%
# memcpy: 19%
# memcpy: 20%
# memcpy: 21%
# memcpy: 22%
# memcpy: 23%
# memcpy: 24%
# memcpy: 25%
# memcpy: 26%
# memcpy: 27%
# memcpy: 28%
# memcpy: 29%
# memcpy: 30%
# memcpy: 31%
# memcpy: 32%
# memcpy: 33%
# memcpy: 34%
# memcpy: 35%
# memcpy: 36%
# memcpy: 37%
# memcpy: 38%
# memcpy: 39%
# memcpy: 40%
# memcpy: 41%
# memcpy: 42%
# memcpy: 43%
# memcpy: 44%
# memcpy: 45%
# memcpy: 46%
# memcpy: 47%
# memcpy: 48%
# memcpy: 49%
# memcpy: 50%
# memcpy: 51%
# memcpy: 52%
# memcpy: 53%
# memcpy: 54%
# memcpy: 55%
# memcpy: 56%
# memcpy: 57%
# memcpy: 58%
# memcpy: 59%
# memcpy: 60%
# memcpy: 61%
# memcpy: 62%
# memcpy: 63%
# memcpy: 64%
# memcpy: 65%
# memcpy: 66%
# memcpy: 67%
# memcpy: 68%
# memcpy: 69%
# memcpy: 70%
# memcpy: 71%
# memcpy: 72%
# memcpy: 73%
# memcpy: 74%
# memcpy: 75%
# memcpy: 76%
# memcpy: 77%
# memcpy: 78%
# memcpy: 79%
# memcpy: 80%
# memcpy: 81%
# memcpy: 82%
# memcpy: 83%
# memcpy: 84%
# memcpy: 85%
# memcpy: 86%
# memcpy: 87%
# memcpy: 88%
# memcpy: 89%
# memcpy: 90%
# memcpy: 91%
# memcpy: 92%
# memcpy: 93%
# memcpy: 94%
# memcpy: 95%
# memcpy: 96%
# memcpy: 97%
# memcpy: 98%
# memcpy: 99%
# memcpy: ok!    
# 
# memset: ok!    
# 
# memset: ok!    
# 
# memcpy: 0%
# memcpy: 1%
# memcpy: 2%
# memcpy: 3%
# memcpy: 4%
# memcpy: 5%
# memcpy: 6%
# memcpy: 7%
# memcpy: 8%
# memcpy: 9%
# memcpy: 10%
# memcpy: 11%
# memcpy: 12%
# memcpy: 13%
# memcpy: 14%
# memcpy: 15%
# memcpy: 16%
# memcpy: 17%
# memcpy: 18%
# memcpy: 19%
# memcpy: 20%
# memcpy: 21%
# memcpy: 22%
# memcpy: 23%
# memcpy: 24%
# memcpy: 25%
# memcpy: 26%
# memcpy: 27%
# memcpy: 28%
# memcpy: 29%
# memcpy: 30%
# memcpy: 31%
# memcpy: 32%
# memcpy: 33%
# memcpy: 34%
# memcpy: 35%
# memcpy: 36%
# memcpy: 37%
# memcpy: 38%
# memcpy: 39%
# memcpy: 40%
# memcpy: 41%
# memcpy: 42%
# memcpy: 43%
# memcpy: 44%
# memcpy: 45%
# memcpy: 46%
# memcpy: 47%
# memcpy: 48%
# memcpy: 49%
# memcpy: 50%
# memcpy: 51%
# memcpy: 52%
# memcpy: 53%
# memcpy: 54%
# memcpy: 55%
# memcpy: 56%
# memcpy: 57%
# memcpy: 58%
# memcpy: 59%
# memcpy: 60%
# memcpy: 61%
# memcpy: 62%
# memcpy: 63%
# memcpy: 64%
# memcpy: 65%
# memcpy: 66%
# memcpy: 67%
# memcpy: 68%
# memcpy: 69%
# memcpy: 70%
# memcpy: 71%
# memcpy: 72%
# memcpy: 73%
# memcpy: 74%
# memcpy: 75%
# memcpy: 76%
# memcpy: 77%
# memcpy: 78%
# memcpy: 79%
# memcpy: 80%
# memcpy: 81%
# memcpy: 82%
# memcpy: 83%
# memcpy: 84%
# memcpy: 85%
# memcpy: 86%
# memcpy: 87%
# memcpy: 88%
# memcpy: 89%
# memcpy: 90%
# memcpy: 91%
# memcpy: 92%
# memcpy: 93%
# memcpy: 94%
# memcpy: 95%
# memcpy: 96%
# memcpy: 97%
# memcpy: 98%
# memcpy: 99%
# memset: ok!    
# 
# memcpy: 0%
# memcpy: 1%
# memcpy: 2%
# memcpy: 3%
# memcpy: 4%
# memcpy: 5%
# memcpy: 6%
# memcpy: 7%
# memcpy: 8%
# memcpy: 9%
# memcpy: 10%
# memcpy: 11%
# memcpy: 12%
# memcpy: 13%
# memcpy: 14%
# memcpy: 15%
# memcpy: 16%
# memcpy: 17%
# memcpy: 18%
# memcpy: 19%
# memcpy: 20%
# memcpy: 21%
# memcpy: 22%
# memcpy: 23%
# memcpy: 24%
# memcpy: 25%
# memcpy: 26%
# memcpy: 27%
# memcpy: 28%
# memcpy: 29%
# memcpy: 30%
# memcpy: 31%
# memcpy: 32%
# memcpy: 33%
# memcpy: 34%
# memcpy: 35%
# memcpy: 36%
# memcpy: 37%
# memcpy: 38%
# memcpy: 39%
# memcpy: 40%
# memcpy: 41%
# memcpy: 42%
# memcpy: 43%
# memcpy: 44%
# memcpy: 45%
# memcpy: 46%
# memcpy: 47%
# memcpy: 48%
# memcpy: 49%
# memcpy: 50%
# memcpy: 51%
# memcpy: 52%
# memcpy: 53%
# memcpy: 54%
# memcpy: 55%
# memcpy: 56%
# memcpy: 57%
# memcpy: 58%
# memcpy: 59%
# memcpy: 60%
# memcpy: 61%
# memcpy: 62%
# memcpy: 63%
# memcpy: 64%
# memcpy: 65%
# memcpy: 66%
# memcpy: 67%
# memcpy: 68%
# memcpy: 69%
# memcpy: 70%
# memcpy: 71%
# memcpy: 72%
# memcpy: 73%
# memcpy: 74%
# memcpy: 75%
# memcpy: 76%
# memcpy: 77%
# memcpy: 78%
# memcpy: 79%
# memcpy: 80%
# memcpy: 81%
# memcpy: 82%
# memcpy: 83%
# memcpy: 84%
# memcpy: 85%
# memcpy: 86%
# memcpy: 87%
# memcpy: 88%
# memcpy: 89%
# memcpy: 90%
# memcpy: 91%
# memcpy: 92%
# memcpy: 93%
# memcpy: 94%
# memcpy: 95%
# memcpy: 96%
# memcpy: 97%
# memcpy: 98%
# memcpy: 99%
# memset: ok!    
# 
#               vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# 
#                   vvvvvvvvvvvvvvvvvvvvvvvvvvvv
# 
# rrrrrrrrrrrrr       vvvvvvvvvvvvvvvvvvvvvvvvvv
# 
# rrrrrrrrrrrrrrrr      vvvvvvvvvvvvvvvvvvvvvvvv
# 
# rrrrrrrrrrrrrrrrrr    vvvvvvvvvvvvvvvvvvvvvvvv
# 
# rrrrrrrrrrrrrrrrrr    vvvvvvvvvvvvvvvvvvvvvvvv
# 
# rrrrrrrrrrrrrrrrrr    vvvvvvvvvvvvvvvvvvvvvvvv
# 
# rrrrrrrrrrrrrrrr      vvvvvvvvvvvvvvvvvvvvvv  
# 
# rrrrrrrrrrrrr       vvvvvvvvvvvvvvvvvvvvvv    
# 
# rr                vvvvvvvvvvvvvvvvvvvvvv      
# 
# rr            vvvvvvvvvvvvvvvvvvvvvvvv      rr
# 
# rrrr      vvvvvvvvvvvvvvvvvvvvvvvvvv      rrrr
# 
# rrrrrr      vvvvvvvvvvvvvvvvvvvvvv      rrrrrr
# 
# rrrrrrrr      vvvvvvvvvvvvvvvvvv      rrrrrrrr
# 
# rrrrrrrrrr      vvvvvvvvvvvvvv      rrrrrrrrrr
# 
# rrrrrrrrrrrr      vvvvvvvvvv      rrrrrrrrrrrr
# 
# rrrrrrrrrrrrrr      vvvvvv      rrrrrrrrrrrrrr
# 
# rrrrrrrrrrrrrrrr      vv      rrrrrrrrrrrrrrrr
# 
# rrrrrrrrrrrrrrrrrr          rrrrrrrrrrrrrrrrrr
# 
# rrrrrrrrrrrrrrrrrrrr      rrrrrrrrrrrrrrrrrrrr
# 
# rrrrrrrrrrrrrrrrrrrrrr  rrrrrrrrrrrrrrrrrrrrrr
# 
# 
# 
#        INSTRUCTION SETS WANT TO BE FREE
# 
# (THU.CST) os is loading ...
# 
# 
# 
# Special kernel symbols:
# 
#   entry  0xc000000c (virtual)
# 
#   etext  0xc0013b74 (virtual)
# 
#   edata  0xc0097050 (virtual)
# 
#   end    0xc009a8bc (virtual)
# 
# Kernel executable memory footprint: 619KB
# 
# memory management: default_pmm_manager
# 
# physcial memory map:
# 
#   memory: 0x00756000, [0x800aa000, 0x807fffff].
# 
# mem_begin: 0x80258000, mem_end: 0x80800000
# 
# check_alloc_page() succeeded!
# 
# check_pgdir() succeeded!
# 
# check_boot_pgdir() succeeded!
# 
# -------------------- BEGIN --------------------
# 
# PDE(004) c0000000-c1000000 01000000 ur-
# 
#   |-- PTE(01000) c0000000-c1000000 01000000 -rw
# 
# PDE(001) fac00000-fb000000 00400000 -r-
# 
#   |-- PTE(00004) faf00000-faf04000 00004000 ur-
# 
#   |-- PTE(00001) fafeb000-fafec000 00001000 -r-
# 
#   |-- PTE(00001) fafec000-fafed000 00001000 -rw
# 
#   |-- PTE(00001) fafff000-fb000000 00001000 ur-
# 
# PDE(001) fb000000-fb400000 00400000 -rw
# 
# PDE(001) ffc00000-00000000 00400000 ur-
# 
#   |-- PTE(00001) fffff000-00000000 00001000 -r-
# 
# --------------------- END ---------------------
# 
# use SLOB allocator
# 
# kmalloc_init() succeeded!
# 
# check_vma_struct() succeeded!
# 
# Store/AMO access fault
# 
# page falut at 0x00000100: K/W
# 
# check_pgfault() succeeded!
# 
# check_vmm() succeeded.
# 
# sched class: stride_scheduler
# 
# Initrd: 0xc001a000 - 0xc0021cff, size: 0x00007d00
# 
# Initrd: 0xc0021d00 - 0xc0096fff, size: 0x00075300
# 
# SWAP: manager = fifo swap manager
# 
# BEGIN check_swap: count 1, total 1437
# 
# setup Page Table for vaddr 0X1000, so alloc a page
# 
# setup Page Table vaddr 0~4MB OVER!
# 
# set up init env for check_swap begin!
# 
# Store/AMO access fault
# 
# page falut at 0x00001000: K/W
# 
# Store/AMO access fault
# 
# page falut at 0x00002000: K/W
# 
# Store/AMO access fault
# 
# page falut at 0x00003000: K/W
# 
# Store/AMO access fault
# 
# page falut at 0x00004000: K/W
# 
# set up init env for check_swap over!
# 
# write Virt Page c in fifo_check_swap
# 
# write Virt Page a in fifo_check_swap
# 
# write Virt Page d in fifo_check_swap
# 
# write Virt Page b in fifo_check_swap
# 
# write Virt Page e in fifo_check_swap
# 
# Store/AMO access fault
# 
# page falut at 0x00005000: K/W
# 
# swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
# 
# write Virt Page b in fifo_check_swap
# 
# write Virt Page a in fifo_check_swap
# 
# Store/AMO access fault
# 
# page falut at 0x00001000: K/W
# 
# swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
# 
# swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
# 
# write Virt Page b in fifo_check_swap
# 
# Store/AMO access fault
# 
# page falut at 0x00002000: K/W
# 
# swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
# 
# swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
# 
# write Virt Page c in fifo_check_swap
# 
# Store/AMO access fault
# 
# page falut at 0x00003000: K/W
# 
# swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
# 
# swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
# 
# write Virt Page d in fifo_check_swap
# 
# Store/AMO access fault
# 
# page falut at 0x00004000: K/W
# 
# swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
# 
# swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
# 
# write Virt Page e in fifo_check_swap
# 
# Store/AMO access fault
# 
# page falut at 0x00005000: K/W
# 
# swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
# 
# swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
# 
# write Virt Page a in fifo_check_swap
# 
# Load access fault
# 
# page falut at 0x00001000: K/R
# 
# swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
# 
# swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
# 
# count is 0, total is 5
# 
# check_swap() succeeded!
# 
# sfs: mount: 'simple file system' (115/2/117)
# 
# vfs: mount disk0.
# 
# ++ setup timer interrupts
# 
# kernel_execve: pid = 2, name = "sh".
# 
# Environment call from S-mode
# 
run -a
run-a
# invalid command name "run-a"
run -a
user sh is running!!!$ restart
# Loading work.openriscv_min_sopc_tb(fast)
# Loading work.openriscv_min_sopc(fast)
# Loading work.phy_bus_addr_conv(fast)
# Loading work.openriscv(fast)
# Loading work.pc_reg(fast)
# Loading work.if_id(fast)
# Loading work.id(fast)
# Loading work.regfile(fast)
# Loading work.id_ex(fast)
# Loading work.ex(fast)
# Loading work.ex_mem(fast)
# Loading work.mem(fast)
# Loading work.mem_wb(fast)
# Loading work.ctrl(fast)
# Loading work.div(fast)
# Loading work.LLbit_reg(fast)
# Loading work.csr(fast)
# Loading work.mmu_conv(fast)
# Loading work.wishbone_bus_if(fast)
# Loading work.wishbone_bus_if(fast__1)
# Loading work.data_ram(fast)
# Loading work.uart_top(fast)
# Loading work.uart_wb(fast)
# Loading work.uart_regs(fast)
# Loading work.uart_transmitter(fast)
# Loading work.uart_tfifo(fast)
# Loading work.raminfr(fast)
# Loading work.uart_sync_flops(fast)
# Loading work.uart_receiver(fast)
# Loading work.uart_rfifo(fast)
# Loading work.uart_debug_if(fast)
# Loading work.bootloader(fast)
# Loading work.flash_rom(fast)
# Loading work.config_string_and_timer(fast)
# Loading work.wb_conmax_top(fast)
# Loading work.wb_conmax_master_if(fast)
# Loading work.wb_conmax_slave_if(fast)
# Loading work.wb_conmax_arb(fast)
# Loading work.wb_conmax_msel(fast)
# Loading work.wb_conmax_pri_enc(fast)
# Loading work.wb_conmax_pri_dec(fast)
# Loading work.wb_conmax_rf(fast)
# ** Warning: (vsim-3015) /home/shyo/openriscv/src/cpu/openriscv.v(674): [PCDPC] - Port size (12 or 12) does not match connection size (32) for port 'csr_reg_addr_i'. The port definition is at: /home/shyo/openriscv/src/cpu/mem.v(65).
#         Region: /openriscv_min_sopc_tb/openriscv_min_sopc0/openriscv0/mem0

